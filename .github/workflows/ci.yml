# This workflow will build, test and generate coverage reports for the .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test with Coverage
      run: dotnet test --no-build --verbosity normal --collect "XPlat Code Coverage" --results-directory ./coverage/raw
      
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
      
    - name: Generate Coverage Report
      run: reportgenerator -reports:"coverage/raw/*/coverage.cobertura.xml" -targetdir:"coverage" -reporttypes:"Html;JsonSummary"
      
    - name: Generate Coverage Badge
      run: pwsh scripts/generate-coverage-badge.ps1 -SummaryFile coverage/Summary.json -OutputFile coverage/coverage-badge.svg
      
    - name: Upload Coverage Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./coverage
